<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
<h:head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>Bookstore Management</title>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
          rel="stylesheet"/>
    <link rel="shortcut icon" type="image/x-icon" href="assets/img/favicon.png"/>
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet"/>
    <link href="/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet"/>
    <link href="/assets/vendor/simple-datatables/style.css" rel="stylesheet"/>
    <link href="/assets/css/style.css" rel="stylesheet"/>
    <link href="/assets/css/sub.css" rel="stylesheet"/>
    <link rel="stylesheet" type="text/css" href="#{request.contextPath}/webjars/primeicons/7.0.0/primeicons.css"/>
</h:head>
<style>
    body {
        margin: 0;
        padding: 0;
    }

    .main-wrapper {
        display: flex;
        margin-top: 60px; /* Adjust for fixed header height */
    }

    .sidebar {
        min-width: 220px;
        max-width: 260px;
        position: fixed;
        top: 60px; /* Align below header */
        left: 0;
        height: calc(100vh - 60px); /* Full height minus header */
        background-color: #f8f9fa; /* Ensure visibility */
        z-index: 1000;
    }

    .main-content {
        flex: 1;
        margin-left: 260px; /* Match max-width of sidebar */
        padding: 24px;
        min-height: calc(100vh - 60px - 100px); /* Adjust for header and footer */
    }

    .section {
        padding: 24px;
    }

    /* Styles for active navigation items */
    .sidebar .nav-link {
        transition: all 0.3s ease;
        border-radius: 6px;
        margin: 2px 8px;
        padding: 12px 16px;
    }

    .sidebar .nav-link.active {
        background-color: #4154f1 !important;
        color: white !important;
        box-shadow: 0 2px 4px rgba(65, 84, 241, 0.3);
    }

    .sidebar .nav-link.active i {
        color: white !important;
    }

    .sidebar .nav-link.active span {
        color: white !important;
        font-weight: 600;
    }

    .sidebar .nav-link:hover:not(.active) {
        background-color: rgba(65, 84, 241, 0.1);
        color: #4154f1;
    }

    .sidebar .nav-link:hover:not(.active) i {
        color: #4154f1;
    }
</style>
<body>
<header id="header" class="header fixed-top d-flex align-items-center">
    <div class="d-flex align-items-center justify-content-between">
        <a href="/dashboard.jsf" class="logo d-flex align-items-center" style="margin-left: 5%">
            <img class="logo d-flex align-items-center w-auto" src="assets/img/main_logo.png" alt=""/>
        </a>
    </div>
    <nav class="header-nav ms-auto">
        <ul class="d-flex align-items-center">
            <li class="nav-item dropdown">
                <a class="nav-link nav-icon" href="#" data-bs-toggle="dropdown">
                    <i class="bi bi-bell"></i>
                    <span class="badge bg-primary badge-number">4</span>
                </a>
                <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow notifications">
                    <li class="dropdown-header">
                        You have 4 new notifications
                        <a href="#">
                            <span class="badge rounded-pill bg-primary p-2 ms-2">View all</span>
                        </a>
                    </li>
                    <li>
                        <hr class="dropdown-divider"/>
                    </li>
                    <li class="notification-item">
                        <i class="bi bi-exclamation-circle text-warning"></i>
                        <div>
                            <h4>New Book Added</h4>
                            <p>A new book has been added to inventory.</p>
                            <p>30 min. ago</p>
                        </div>
                    </li>
                    <li>
                        <hr class="dropdown-divider"/>
                    </li>
                    <li class="notification-item">
                        <i class="bi bi-check-circle text-success"></i>
                        <div>
                            <h4>Order Confirmed</h4>
                            <p>Order #2457 has been confirmed.</p>
                            <p>1 hr. ago</p>
                        </div>
                    </li>
                </ul>
            </li>
            <li class="nav-item dropdown pe-3">
                <a class="nav-link nav-profile d-flex align-items-center pe-0" href="#" data-bs-toggle="dropdown">
                   <span class="d-none d-md-block dropdown-toggle ps-2">
                        #{userSessionBean.getcurrentStaffName()}
                   </span>
                </a>
                <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow profile" style="align-content: center;">
                    <li style="display: flex; justify-content: center; align-items: center;">
                        <h:form>
                            <p:commandButton value="Đăng xuất" styleClass="ui-button-outlined ui-button-danger"
                                             action="#{authenticationController.logout}" ajax="false"/>
                        </h:form>
                    </li>
                </ul>
            </li>
        </ul>
    </nav>
</header>
<aside id="sidebar" class="sidebar">
    <ul class="sidebar-nav" id="sidebar-nav">
        <li class="nav-item">
            <a class="nav-link" href="${pageContext.request.contextPath}/dashboard.jsf" data-section="dashboard">
                <i class="bi bi-grid"></i>
                <span>Dashboard</span>
            </a>
        </li>
        <li class="nav-item" data-role="admin,staff">
            <a class="nav-link collapsed" href="${pageContext.request.contextPath}/inventoryManagement.jsf"
               data-section="inventory">
                <i class="bi bi-box"></i>
                <span>Quản lý kho</span>
            </a>
        </li>
        <li class="nav-item" data-role="admin,staff">
            <a class="nav-link collapsed" href="${pageContext.request.contextPath}/bookManagement.jsf"
               data-section="books">
                <i class="bi bi-book"></i>
                <span>Quản lý sách</span>
            </a>
        </li>
        <li class="nav-item" data-role="admin,staff">
            <a class="nav-link collapsed" href="${pageContext.request.contextPath}/orderManagement.jsf"
               data-section="orders">
                <i class="bi bi-cart"></i>
                <span>Quản lý đơn hàng</span>
            </a>
        </li>
        <li class="nav-item" data-role="admin,staff">
            <a class="nav-link collapsed" href="${pageContext.request.contextPath}/importBookManagement.jsf" data-section="purchase-orders">
                <i class="bi bi-truck"></i>
                <span>Quản lý nhập hàng</span>
            </a>
        </li>
    </ul>
</aside>
<div class="main-wrapper d-flex">
    <div class="content">
        <ui:insert name="content"/>
    </div>
</div>
<script>
    const userRole = 'admin';

    // Hide elements based on user role
    document.querySelectorAll('[data-role]').forEach(item => {
        const roles = item.getAttribute('data-role').split(',');
        if (!roles.includes(userRole)) {
            item.style.display = 'none';
        }
    });

    // Function to set active navigation item
    function setActiveNavItem(activeLink) {
        // Remove active class from all nav links
        document.querySelectorAll('.sidebar .nav-link').forEach(link => {
            link.classList.remove('active');
        });

        // Add active class to the clicked link
        if (activeLink) {
            activeLink.classList.add('active');
        }
    }

    // Function to detect current page and set active nav item
    function setActiveBasedOnCurrentPage() {
        const currentPath = window.location.pathname;
        let activeLink = null;

        // Map current page to corresponding nav link
        if (currentPath.includes('dashboard')) {
            activeLink = document.querySelector('a[data-section="dashboard"]');
        } else if (currentPath.includes('inventoryManagement')) {
            activeLink = document.querySelector('a[data-section="inventory"]');
        } else if (currentPath.includes('bookManagement')) {
            activeLink = document.querySelector('a[data-section="books"]');
        } else if (currentPath.includes('orderManagement')) {
            activeLink = document.querySelector('a[data-section="orders"]');
        } else if (currentPath.includes('purchase-orders')) {
            activeLink = document.querySelector('a[data-section="purchase-orders"]');
        } else if (currentPath.includes('staff')) {
            activeLink = document.querySelector('a[data-section="staff"]');
        }

        if (activeLink) {
            setActiveNavItem(activeLink);
        }
    }

    // Store the clicked nav item in localStorage for cross-page persistence
    function storeActiveNavItem(section) {
        localStorage.setItem('activeNavSection', section);
    }

    // Restore active nav item from localStorage
    function restoreActiveNavItem() {
        const savedSection = localStorage.getItem('activeNavSection');
        if (savedSection) {
            const savedLink = document.querySelector(`a[data-section="${savedSection}"]`);
            if (savedLink) {
                setActiveNavItem(savedLink);
            }
        }
    }

    // Set active nav item based on current page when page loads
    document.addEventListener('DOMContentLoaded', function () {
        setActiveBasedOnCurrentPage();
        // Also restore from localStorage in case of page refresh
        restoreActiveNavItem();
    });

    // Handle navigation clicks
    document.querySelectorAll('.sidebar .nav-link').forEach(link => {
        link.addEventListener('click', function (e) {
            const href = link.getAttribute('href');
            const section = link.getAttribute('data-section');

            // Store the clicked section for persistence across pages
            if (section) {
                storeActiveNavItem(section);
            }

            // For hash links (single page sections)
            if (href &amp;&amp; href.startsWith('#')) {
                e.preventDefault();
                const target = link.getAttribute('data-section');

                // Hide all sections
                document.querySelectorAll('.section').forEach(section => {
                    section.classList.add('d-none');
                });

                // Show target section
                const targetSection = document.getElementById(target);
                if (targetSection) {
                    targetSection.classList.remove('d-none');
                }

                // Set active nav item
                setActiveNavItem(link);

                // Store active section in sessionStorage for persistence
                sessionStorage.setItem('activeSection', target);
            } else {
                // For regular page navigation, set active state
                setActiveNavItem(link);
            }
        });
    });

    // Restore active section from sessionStorage (for single-page sections)
    const savedActiveSection = sessionStorage.getItem('activeSection');
    if (savedActiveSection) {
        const savedLink = document.querySelector(`a[data-section="${savedActiveSection}"]`);
        if (savedLink &amp;&amp; savedLink.getAttribute('href').startsWith('#')) {
            // Hide all sections
            document.querySelectorAll('.section').forEach(section => {
                section.classList.add('d-none');
            });

            // Show saved section
            const savedSection = document.getElementById(savedActiveSection);
            if (savedSection) {
                savedSection.classList.remove('d-none');
                setActiveNavItem(savedLink);
            }
        }
    }
</script>
<!-- Vendor JS Files -->
<script src="assets/vendor/apexcharts/apexcharts.min.js"></script>
<script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="assets/vendor/chart.js/chart.umd.js"></script>
<script src="assets/vendor/echarts/echarts.min.js"></script>
<script src="assets/vendor/quill/quill.js"></script>
<script src="assets/vendor/simple-datatables/simple-datatables.js"></script>
<script src="assets/vendor/tinymce/tinymce.min.js"></script>
<script src="assets/vendor/php-email-form/validate.js"></script>
<!-- Template Main JS File -->
<script src="assets/js/main.js"></script>
<script src="assets/js/html2canvas.min.js"></script>
<script src="assets/js/jspdf.umd.min.js"></script>
<script>
    window.exportChartToPDF = async function () {
        const {jsPDF} = window.jspdf;
        // Update selector to find PrimeFaces chart canvas
        const chartElement = document.querySelector('#chart\\:lineChart canvas');

        if (!chartElement) {
            alert("Không tìm thấy biểu đồ.");
            return;
        }
        const imgData = chartElement.toDataURL("image/png");

        const pdf = new jsPDF();
        pdf.addImage(imgData, 'PNG', 10, 10, 180, 100);
        pdf.save("linechart.pdf");
    };

    window.exportBarChart = async function () {
        const {jsPDF} = window.jspdf;
        // Update selector to find PrimeFaces chart canvas
        const chartElement = document.querySelector('#chart\\:barChart canvas');

        if (!chartElement) {
            alert("Không tìm thấy biểu đồ.");
            return;
        }
        const imgData = chartElement.toDataURL("image/png");

        const pdf = new jsPDF();
        pdf.addImage(imgData, 'PNG', 10, 10, 180, 100);
        pdf.save("barchart.pdf");
    }
</script>
</body>
</html>